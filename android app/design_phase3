When a user launches the triage application, login data is automatically loaded from the passwords.txt. The user can then login as either a nurse or a physician. The nurse and physician are not differentiated by their class; they are differentiated through the front-end. We believe this is a simpler design that allows for quick adaptations: since we only need to change the front-end if we decide that the nurse and physician will overlap more responsibilities.

When any user logins, data is automatically loaded from the save file, if it exists, or the patient records text file. This file then creates Patient classes with its corresponding attributes. When any user saves data, a new file is then created based on the patient classes and replaces the old one. Any user can look up a patient's record by their health card number. This is done by referring to the patient list in the Patient class. 

When a nurse records a new patient, a Patient class is created to store its data. At the same time, it is added to the patient list class attribute. The Nurse class uses the record methods to record data into the Patient class. For a new patient, the nurse has to specify the patient's name, birthdate and health number. When the nurse records the arrival time, the current date and time is automatically recorded into an list. They can also record the time of any doctor visits.

The nurse can record the patient's vital signs at any time, retaining older values. They can also record the patient's symptoms at any time, again retaining older values. They can record the time of any doctor visits. These will all be Maps, with the corresponding arrival time as the key. They can also access a list of the patients specified by either decreasing urgency or arrival time.

The physician can record the patient's prescription. It is automatically mapped to the most recent visit, in String form. The physician can do this any number of times for a single visit, the String will simply be extended.

The Patient class has a class attribute patient list, which stores a list of all the patients. There will be getters for this patient list, specified by either urgency or arrival time. The Patient class has attributes name, birthdate, health number, and arrival time. The temperature, blood pressure, heart rate, category, symptoms, doctor visits and prescriptions are all separate Maps where the key is the time and the value is what it corresponds to. This allows for retaining of older values. Separate Maps are used because this allows for implementation of new attributes without changing old ones. All the necessary data are in the Patient class. When a nurse saves the data, the patient attributes are then updated.

